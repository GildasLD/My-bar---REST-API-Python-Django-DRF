openapi: 3.0.3
info:
  title: My bar
  version: 1.0.0
  description: "My bar's API \n    \n    For the demonstration, you do not need authentication\
    \ to test the api.\n\n    All routes are open and the database is reset every\
    \ hour....\n\n    Link to the repository : https://github.com/GildasLD/My_bar--REST_API--Python_Django-DRF\n\
    \    \n    "
paths:
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/token/verify/:
    post:
      operationId: auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyRequest'
        required: true
      responses:
        '200':
          description: No response body
  /api/bars/:
    get:
      operationId: bars_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - bars
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBarList'
          description: ''
    post:
      operationId: bars_create
      tags:
      - bars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
          description: ''
  /api/bars/{id}/:
    get:
      operationId: bars_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bar.
        required: true
      tags:
      - bars
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
          description: ''
    put:
      operationId: bars_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bar.
        required: true
      tags:
      - bars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
          description: ''
    patch:
      operationId: bars_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bar.
        required: true
      tags:
      - bars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBarRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBarRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBarRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bar'
          description: ''
    delete:
      operationId: bars_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bar.
        required: true
      tags:
      - bars
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/:
    get:
      operationId: orders_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: order_date
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: orders_create
      tags:
      - orders
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/references/:
    get:
      operationId: references_list
      parameters:
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: ref
        schema:
          type: string
      tags:
      - references
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReferenceList'
          description: ''
    post:
      operationId: references_create
      tags:
      - references
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReferenceRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: ''
  /api/references/{id}/:
    get:
      operationId: references_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reference.
        required: true
      tags:
      - references
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: ''
    put:
      operationId: references_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reference.
        required: true
      tags:
      - references
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReferenceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: ''
    patch:
      operationId: references_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reference.
        required: true
      tags:
      - references
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReferenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReferenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReferenceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: ''
    delete:
      operationId: references_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reference.
        required: true
      tags:
      - references
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/statistics:
    get:
      operationId: statistics_retrieve
      tags:
      - statistics
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/stocks/:
    get:
      operationId: stocks_list
      parameters:
      - in: query
        name: bar
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: reference
        schema:
          type: integer
      - in: query
        name: stock
        schema:
          type: integer
      tags:
      - stocks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStockList'
          description: ''
    post:
      operationId: stocks_create
      tags:
      - stocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
  /api/stocks/{id}/:
    get:
      operationId: stocks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stock.
        required: true
      tags:
      - stocks
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    put:
      operationId: stocks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stock.
        required: true
      tags:
      - stocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    patch:
      operationId: stocks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stock.
        required: true
      tags:
      - stocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStockRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    delete:
      operationId: stocks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this stock.
        required: true
      tags:
      - stocks
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Bar:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
      required:
      - id
    BarRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 255
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order_date:
          type: string
          format: date-time
          readOnly: true
        order_items:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
      required:
      - id
      - order_date
      - order_items
    PaginatedBarList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Bar'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedReferenceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    PaginatedStockList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Stock'
    PatchedBarRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
          maxLength: 255
    PatchedReferenceRequest:
      type: object
      properties:
        ref:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
    PatchedStockRequest:
      type: object
      properties:
        stock:
          type: integer
    Reference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ref:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        availability:
          type: object
          additionalProperties: {}
          readOnly: true
        where:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - availability
      - id
      - where
    ReferenceRequest:
      type: object
      properties:
        ref:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
    Register:
      type: object
      properties:
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
      required:
      - email
      - username
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        first_name:
          type: string
          title: Prénom
          maxLength: 150
        last_name:
          type: string
          title: Nom
          maxLength: 150
      required:
      - email
      - password
      - password2
      - username
    Stock:
      type: object
      properties:
        reference:
          type: string
          readOnly: true
        bar:
          type: string
          readOnly: true
        stock:
          type: integer
      required:
      - bar
      - reference
      - stock
    StockRequest:
      type: object
      properties:
        stock:
          type: integer
      required:
      - stock
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    TokenVerifyRequest:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
